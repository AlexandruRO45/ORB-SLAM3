name: Minimal Ubuntu Build

# Controls when the workflow will run
on:
  push:
    branches: ["main", "master", "exp/setup"]
  pull_request:
    branches: ["main", "master", "exp/setup"]

jobs:
  build-on-ubuntu:
    # The runner environment
    runs-on: ubuntu-24.04

    # Optional: Test against multiple Python versions
    strategy:
      matrix:
        python-version: ["3.10", "3.12"]

    steps:
      # --- 1. Set up the Environment ---
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          # This is crucial for fetching the ORB_SLAM3_engine submodule
          submodules: "recursive"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # --- 2. Install All C++ Dependencies (including Pangolin from source) ---
      - name: Install System & C++ Dependencies
        run: |
          # First, update the package lists
          sudo apt-get update -y

          # Install base dependencies for ORB-SLAM3 and prerequisites for building Pangolin
          # This includes essentials, other libraries like Eigen/OpenCV, and what Pangolin needs (glew)
          sudo apt-get install -y \
            build-essential cmake git pkg-config \
            libeigen3-dev libopencv-dev libboost-dev libboost-serialization-dev \
            liboctomap-dev libssl-dev libglew-dev

          # --- Build and Install Pangolin from Source ---
          echo "--- Building Pangolin from source ---"
          # Go to a temporary directory to keep the workspace clean
          cd /tmp

          # Clone the Pangolin repository. --depth 1 makes it faster.
          git clone --depth 1 https://github.com/stevenlovegrove/Pangolin.git
          cd Pangolin

          # Configure the build with CMake. Disabling the viewer is best practice for CI.
          cmake -B build -DBUILD_PANGOLIN_VIEWER=OFF

          # Build using all available CPU cores
          cmake --build build -j$(nproc)

          # Install Pangolin to a system-wide location (e.g., /usr/local/)
          # This ensures the main project's CMake can find it automatically.
          sudo cmake --install build

          # IMPORTANT: Return to the original workspace directory for the next steps
          cd $GITHUB_WORKSPACE

      # --- 3. Build and Install the Python Package ---
      - name: Install orbslam3 package
        run: |
          # Upgrade pip and install build tools
          python -m pip install --upgrade pip build

          # Use pip to install the current project.
          # This will trigger your setup.py and the CMake build process.
          pip install .

      # --- 4. (Optional) Add a simple import test ---
      - name: Verify installation with a simple import
        run: python -c "import orbslam3; print(f'Successfully imported orbslam3 version {orbslam3.__version__}')"
